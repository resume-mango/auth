{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://auth/./src/api/v1/controllers/auth.ts","webpack://auth/./src/api/v1/controllers/main.ts","webpack://auth/./src/api/v1/controllers/private.ts","webpack://auth/./src/api/v1/helpers/user.ts","webpack://auth/./src/api/v1/middlewares/emailVerify.ts","webpack://auth/./src/api/v1/middlewares/error_handler.ts","webpack://auth/./src/api/v1/routes/index.ts","webpack://auth/./src/app.ts","webpack://auth/./src/config/app.ts","webpack://auth/./src/config/redis.ts","webpack://auth/./src/server.ts","webpack://auth/external commonjs \"@sentry/node\"","webpack://auth/external commonjs \"@sentry/tracing\"","webpack://auth/external commonjs \"axios\"","webpack://auth/external commonjs \"chalk\"","webpack://auth/external commonjs \"connect-redis\"","webpack://auth/external commonjs \"cookie-parser\"","webpack://auth/external commonjs \"cors\"","webpack://auth/external commonjs \"csurf\"","webpack://auth/external commonjs \"express\"","webpack://auth/external commonjs \"express-openid-connect\"","webpack://auth/external commonjs \"express-rate-limit\"","webpack://auth/external commonjs \"helmet\"","webpack://auth/external commonjs \"http-errors\"","webpack://auth/external commonjs \"ioredis\"","webpack://auth/external commonjs \"morgan\"","webpack://auth/external node-commonjs \"os\"","webpack://auth/external node-commonjs \"path\"","webpack://auth/webpack/bootstrap","webpack://auth/webpack/startup"],"sourcesContent":["import { Request, Response, NextFunction } from 'express'\nimport createHttpError from 'http-errors'\n// import { IN_PROD } from '../../../config/app'\n\nexport default {\n  login: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      const path = req.query.rm_path?.toString()\n      const host = req.query.rm_name?.toString()\n      const screen = req.query.screen?.toString() || ''\n      const redirectUrl =\n        host && path ? `/auth?rm_name=${host}&rm_path=${path}` : '/auth'\n\n      res.oidc.login({\n        returnTo: redirectUrl,\n        silent: true,\n        authorizationParams: {\n          screen,\n        },\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n  logout: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      if (!req.oidc.isAuthenticated())\n        throw new createHttpError.Unauthorized('Not logged in')\n      res.oidc.logout({ returnTo: process.env.BASE_HOST })\n      res.clearCookie('rm_ia', {\n        path: '/',\n        domain: process.env.COOKIE_DOMAIN,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n}\n","import { Request, Response, NextFunction } from 'express'\nimport createHttpError from 'http-errors'\nimport { parseUser, syncToken, updateUserRef } from '../helpers/user'\nexport default {\n  home: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      let url = process.env.BASE_HOST\n      let hostname\n      const path = req.query.rm_path?.toString()\n      const host = req.query.rm_name?.toString()\n\n      const token = req.oidc.accessToken?.access_token\n      const { SID } = req.cookies\n      SID && (await syncToken(token as string, SID))\n\n      if (path && host) {\n        hostname =\n          host === 'app'\n            ? process.env.USERDASH_HOST\n            : host === 'manage'\n            ? process.env.MANAGEMENT_HOST\n            : process.env.USERDASH_HOST\n        url = hostname + path\n      } else {\n        url = process.env.USERDASH_HOST\n      }\n      res.redirect(url as string)\n    } catch (err) {\n      next(err)\n    }\n  },\n\n  initialData: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      const { SID } = req.cookies\n\n      const isAuth = req.oidc.isAuthenticated()\n      if (!isAuth) throw new createHttpError.Unauthorized()\n\n      const { token_type, isExpired, refresh } = req.oidc.accessToken as any\n\n      const user = req.oidc.user\n      if (!user) throw new createHttpError.Unauthorized('user not found!')\n\n      const userData = parseUser(user)\n\n      let token = req.oidc.accessToken?.access_token\n\n      if (isExpired()) {\n        const { access_token } = await refresh()\n\n        token = access_token\n      }\n\n      if (!token || !token_type) throw new createHttpError.Unauthorized()\n\n      if (!userData.ref) {\n        const response = await updateUserRef(token, refresh, SID)\n\n        if (response) {\n          token = response?.access_token\n          userData.ref = response.ref\n        }\n      }\n      res.status(200)\n      res.json({\n        user: userData,\n        token: `${token_type} ${token}`,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n  refreshSession: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      if (!req.oidc.isAuthenticated()) throw new createHttpError.Unauthorized()\n\n      const { token_type, refresh } = req.oidc.accessToken as any\n\n      const { access_token } = await refresh()\n\n      if (!access_token)\n        throw createHttpError(400, 'failed to refresh session!')\n      console.log('refreshed')\n      res.status(200)\n      res.json(`${token_type} ${access_token}`)\n    } catch (err) {\n      next(err)\n    }\n  },\n}\n","import { Request, Response, NextFunction } from 'express'\nimport createHttpError from 'http-errors'\n\nexport default {\n  token: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      const isAuth = req.oidc.isAuthenticated()\n      if (!isAuth) throw new createHttpError.Unauthorized()\n      const { token_type, isExpired, refresh } = req.oidc.accessToken as any\n\n      let token = req.oidc.accessToken?.access_token\n\n      if (isExpired()) {\n        const { access_token } = await refresh()\n        token = access_token\n      }\n      if (!token || !token_type) throw new createHttpError.Unauthorized()\n      res.status(200)\n      res.json({ token_type, token })\n    } catch (err) {\n      next(err)\n    }\n  },\n}\n","import axios from 'axios'\n/**\n * Parse User object\n * @param user decoded user data\n * @returns { role, firstName, lastName, ref}\n */\nexport const parseUser = (user: Record<string, any>) => {\n  let firstName = ''\n  let lastName = ''\n  const namespace = process.env.AUTH0_RULES_NAMESPACE as string\n\n  const userMetadata = user && user[namespace].user_metadata\n  const appMetadata = user && user[namespace].app_metadata\n  const role = (user && user[namespace].role) || null\n\n  if (userMetadata && userMetadata.firstName) {\n    firstName = userMetadata.firstName\n    lastName = userMetadata.lastName\n  } else {\n    if (user.sub.split('|')[0] === 'auth0') {\n      firstName = user.nickname\n    } else {\n      firstName = user.given_name\n      lastName = user.family_name\n    }\n  }\n  const ref = appMetadata.ref || ''\n  return {\n    id: user.sub,\n    role,\n    firstName,\n    lastName,\n    ref,\n  }\n}\n/**\n * Saves sid token to databse\n * @param token authentication jwt access_token\n * @param SID session cookie\n * @returns boolean\n */\nexport const syncToken = async (token: string, SID: string) =>\n  await axios\n    .request({\n      method: 'PATCH',\n      url: `${process.env.API_HOST}/v1/m2m/user/sid`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n        Cookie: `SID=${SID};`,\n      },\n      withCredentials: true,\n    })\n    .then(async (_res) => {\n      console.log('synced')\n      return true\n    })\n    .catch((_err) => {\n      console.log('failed to sync session ID!')\n      return false\n    })\n\n/**\n * Updates user refrence in database\n * @param token authentication jwt access_token\n * @param refresh from oidc\n * @param SID session cookie\n * @returns (access_token, ref) or null\n */\nexport const updateUserRef = async (\n  token: string,\n  refresh: () => any,\n  SID: string\n) =>\n  await axios\n    .request({\n      method: 'POST',\n      url: `${process.env.API_HOST}/v1/m2m/user`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n        Cookie: `SID=${SID};`,\n      },\n      withCredentials: true,\n    })\n    .then(async (res) => {\n      const { access_token } = await refresh()\n\n      return { access_token, ref: res.data }\n    })\n    .catch((err) => {\n      console.log(\n        err.response && err.response.data && err.response.data.message\n          ? err.response.data.message\n          : err\n      )\n      return null\n    })\n","import { Request, Response, NextFunction } from 'express'\nimport { ResponseError } from './error_handler'\n\nexport const emailVerify = (\n  err: ResponseError,\n  _req: Request,\n  res: Response,\n  next: NextFunction\n) => {\n  if (err.status === 400 && err.message.includes('email_not_verified')) {\n    const userId = err.message.split('email_not_verified:')[1].split(')')[0]\n\n    res.redirect(\n      `${process.env.BASE_HOST}/verify-email/${Buffer.from(userId).toString(\n        'base64'\n      )}`\n    )\n  } else {\n    next(err)\n  }\n}\n","import { Request, Response, NextFunction } from 'express'\r\nimport { IN_PROD } from '../../../config/app'\r\n\r\nexport interface ResponseError extends Error {\r\n  status?: number\r\n}\r\n\r\nconst notFound = async (_req: Request, _res: Response, next: NextFunction) => {\r\n  const error: any = new Error('Not Found')\r\n  error.status = 404\r\n  next(error)\r\n}\r\n\r\nconst errorHandler = (\r\n  err: ResponseError,\r\n  req: Request,\r\n  res: Response,\r\n  _next: NextFunction\r\n) => {\r\n  console.log(err.stack)\r\n  const { retry } = req.query\r\n  if (\r\n    !retry &&\r\n    err.status === 400 &&\r\n    (err.message.includes('checks.state argument is missing') ||\r\n      err.message.includes('state mismatch'))\r\n  ) {\r\n    console.log('redirect for check state error')\r\n    return res.redirect('/auth?retry=1')\r\n  } else if (\r\n    err.status === 401 &&\r\n    err.message.includes('Not logged in') &&\r\n    process.env.BASE_HOST\r\n  ) {\r\n    return res.redirect(process.env.BASE_HOST as string)\r\n  } else {\r\n    res.status(err.status || 500)\r\n    return res.send({\r\n      error: {\r\n        status: err.status || 500,\r\n        message: err.message || 'Something went wrong',\r\n        stack: !IN_PROD ? err.stack : null,\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nexport { notFound, errorHandler }\r\n","import express from 'express'\nimport mainController from '../controllers/main'\nimport authController from '../controllers/auth'\n\nimport privateController from '../controllers/private'\nimport { requiresAuth } from 'express-openid-connect'\n\nconst router = express.Router()\nrouter.get('/', requiresAuth(), mainController.home)\nrouter.get('/data', mainController.initialData)\nrouter.get('/refresh', mainController.refreshSession)\nrouter.get('/private/token', privateController.token)\nrouter.get('/login', authController.login)\nrouter.get('/logout', authController.logout)\n\nexport default router\n","import express, { Application } from 'express'\nimport cors from 'cors'\nimport helmet from 'helmet'\nimport rateLimit from 'express-rate-limit'\nimport RoutesV1 from './api/v1/routes'\nimport cookieParser from 'cookie-parser'\nimport morgan from 'morgan'\nimport connectRedis from 'connect-redis'\nimport path from 'path'\nimport { redisClient } from './config/redis'\nimport { auth, ConfigParams } from 'express-openid-connect'\nimport { errorHandler, notFound } from './api/v1/middlewares/error_handler'\nimport { IN_STAGING, IN_PROD, PORT } from './config/app'\nimport csrf from 'csurf'\nimport os from 'os'\nimport { emailVerify } from './api/v1/middlewares/emailVerify'\nimport * as Sentry from '@sentry/node'\nimport * as Tracing from '@sentry/tracing'\n\nconst app: Application = express()\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  integrations: [\n    // enable HTTP calls tracing\n    new Sentry.Integrations.Http({ tracing: true }),\n    // enable Express.js middleware tracing\n    new Tracing.Integrations.Express({ app }),\n    // Automatically instrument Node.js libraries and frameworks\n    ...Sentry.autoDiscoverNodePerformanceMonitoringIntegrations(),\n  ],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n})\n\nconst csrfProtection = csrf({\n  cookie: {\n    key: 'CSRF-TOKEN',\n    httpOnly: true,\n    secure: IN_PROD || false,\n    maxAge: 3600,\n    path: '/',\n    domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n    sameSite: 'lax',\n  },\n})\n\nconst RedisStore = connectRedis(auth) as any\n\napp.set('views', path.join(__dirname, '/views'))\napp.set('view engine', 'ejs')\n\napp.disable('x-powered-by')\n\n// RequestHandler creates a separate execution context using domains, so that every\n// transaction/span/breadcrumb is attached to its own Hub instance\napp.use(Sentry.Handlers.requestHandler())\n// TracingHandler creates a trace for every incoming request\napp.use(Sentry.Handlers.tracingHandler())\n\napp.use(\n  cors({\n    origin: true,\n    credentials: true,\n  })\n)\n\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\napp.use(morgan('dev'))\n\napp.use(\n  helmet({\n    crossOriginResourcePolicy: false,\n  })\n)\n\nif (!IN_STAGING) {\n  app.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'])\n\n  app.use(csrfProtection)\n  app.use((req, res, next) => {\n    const token = req.csrfToken()\n    res.cookie('XSRF-TOKEN', token, {\n      secure: IN_PROD || false,\n      maxAge: 3600,\n      path: '/',\n      domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n      sameSite: 'lax',\n    })\n    res.locals.csrfToken = token\n    next()\n  })\n}\n\nconst apiRequestLimiter = rateLimit({\n  windowMs: 1 * 60 * 1000, // 1 minute\n  max: 100, // limit each IP to 60 requests per windowMs\n})\n\napp.use(apiRequestLimiter)\n\nconst config: ConfigParams = {\n  clientSecret: process.env.AUTH0_CLIENT_SECRET,\n  clientID: process.env.AUTH0_CLIENT_ID,\n  secret: process.env.AUTH0_SECRET,\n  issuerBaseURL: process.env.AUTH0_ISSUER_BASE_URL,\n  baseURL:\n    !process.env.AUTH0_BASE_URL && !IN_PROD && !IN_STAGING\n      ? `http://localhost:${PORT}`\n      : process.env.AUTH0_BASE_URL,\n  authRequired: false,\n  auth0Logout: true,\n  idpLogout: true,\n\n  authorizationParams: {\n    response_type: 'code',\n    audience: process.env.AUTH0_AUDIENCE,\n    scope: 'openid profile email offline_access',\n  },\n  routes: {\n    login: false,\n    logout: false,\n    callback: '/auth/callback',\n    // postLogoutRedirect: process.env.BASE_HOST,\n  },\n  session: {\n    name: 'SID',\n    store: new RedisStore({ client: redisClient }),\n    cookie: {\n      domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n      path: '/',\n      transient: false,\n      httpOnly: true,\n      secure: IN_PROD,\n      sameSite: 'Lax',\n    },\n  },\n  afterCallback: async (_req, res, session) => {\n    res.cookie('rm_ia', true, {\n      expires: new Date(parseInt(session.expires_at) * 1000),\n      path: '/',\n      domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n      sameSite: 'lax',\n      secure: IN_PROD,\n    })\n    return session\n  },\n}\n\napp.use(auth(config))\n\napp.use('/auth', RoutesV1)\n\napp.use('/auth/health-check', (_req, res) => {\n  const healthcheck = {\n    uptime: process.uptime(),\n    processtime: process.hrtime(),\n    message: 'OK',\n    timestamp: Date.now(),\n    id: os.hostname(),\n  }\n  try {\n    res.send(healthcheck)\n  } catch (error) {\n    healthcheck.message = error\n    res.status(503).send()\n  }\n})\n\napp.use(emailVerify, notFound, Sentry.Handlers.errorHandler(), errorHandler)\n\nprocess.on('uncaughtException', function (err) {\n  console.error(err)\n  console.log('Node NOT Exiting...')\n})\n\nexport default app\n","const PORT = process.env.APP_PORT || 4000\n\nconst APP_ORIGIN = `http://localhost:${PORT}`\n\nconst IN_PROD = process.env.NODE_ENV === 'production'\nconst IN_STAGING = process.env.NODE_ENV === 'test'\n\nexport { PORT, APP_ORIGIN, IN_PROD, IN_STAGING }\n","import chalk from 'chalk'\nimport Redis, { RedisOptions } from 'ioredis'\nimport { IN_PROD } from './app'\n\nconst HOST = !IN_PROD ? 'localhost' : process.env.REDIS_HOST\n\nconst REDIS_OPTIONS: RedisOptions = {\n  port: Number(process.env.REDIS_PORT),\n  host: HOST,\n  // password: REDIS_PASSWORD\n}\n\nconst redisClient = new Redis(REDIS_OPTIONS)\n\nredisClient.on('connect', () =>\n  console.log(\n    chalk.yellow.bold(\n      `Redis connected on ${HOST}:${Number(process.env.REDIS_PORT)}`\n    )\n  )\n)\nredisClient.on('error', () =>\n  console.log(\n    chalk.red.bold(\n      `Redis failed to connect on ${HOST}:${Number(process.env.REDIS_PORT)}`\n    )\n  )\n)\n\nexport { redisClient }\n","import chalk from \"chalk\"\nimport app from \"./app\"\nimport { APP_ORIGIN, PORT } from \"./config/app\"\nconst handler = async () => {\n  try {\n    app.listen(PORT, () =>\n      // eslint-disable-next-line no-console\n      console.log(chalk.blue.bold(`Server running on ${APP_ORIGIN}`))\n    )\n  } catch (err) {\n    console.error(chalk.red.bold(err, \"trigger\"))\n  }\n}\n\nexport const viteNodeApp = handler()\n","module.exports = require(\"@sentry/node\");","module.exports = require(\"@sentry/tracing\");","module.exports = require(\"axios\");","module.exports = require(\"chalk\");","module.exports = require(\"connect-redis\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"csurf\");","module.exports = require(\"express\");","module.exports = require(\"express-openid-connect\");","module.exports = require(\"express-rate-limit\");","module.exports = require(\"helmet\");","module.exports = require(\"http-errors\");","module.exports = require(\"ioredis\");","module.exports = require(\"morgan\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(728);\n"],"names":["login","req","res","next","path","query","rm_path","toString","host","rm_name","screen","redirectUrl","oidc","returnTo","silent","authorizationParams","err","logout","isAuthenticated","Unauthorized","clearCookie","domain","home","hostname","url","token","accessToken","access_token","SID","cookies","syncToken","redirect","initialData","token_type","isExpired","refresh","user","userData","parseUser","ref","response","updateUserRef","status","json","refreshSession","console","log","firstName","lastName","namespace","userMetadata","user_metadata","appMetadata","app_metadata","role","sub","split","nickname","given_name","family_name","id","request","method","headers","Authorization","Cookie","withCredentials","then","_res","catch","_err","data","message","emailVerify","_req","includes","userId","Buffer","from","notFound","error","Error","errorHandler","_next","stack","retry","send","IN_PROD","router","Router","get","requiresAuth","app","Sentry","init","dsn","integrations","Integrations","Http","tracing","Tracing","Express","autoDiscoverNodePerformanceMonitoringIntegrations","tracesSampleRate","csrfProtection","cookie","key","httpOnly","secure","maxAge","sameSite","RedisStore","auth","set","join","__dirname","disable","use","Handlers","requestHandler","tracingHandler","origin","credentials","urlencoded","extended","crossOriginResourcePolicy","IN_STAGING","csrfToken","locals","apiRequestLimiter","windowMs","max","config","clientSecret","clientID","secret","issuerBaseURL","baseURL","authRequired","auth0Logout","idpLogout","response_type","audience","scope","routes","callback","session","name","store","client","redisClient","transient","afterCallback","expires","Date","parseInt","expires_at","healthcheck","uptime","process","processtime","hrtime","timestamp","now","on","PORT","APP_ORIGIN","HOST","REDIS_OPTIONS","port","Number","yellow","bold","red","viteNodeApp","listen","blue","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}