{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://auth/./src/api/v1/controllers/auth.ts","webpack://auth/./src/api/v1/controllers/main.ts","webpack://auth/./src/api/v1/controllers/private.ts","webpack://auth/./src/api/v1/helpers/user.ts","webpack://auth/./src/api/v1/middlewares/error_handler.ts","webpack://auth/./src/api/v1/routes/index.ts","webpack://auth/./src/app.ts","webpack://auth/./src/config/app.ts","webpack://auth/./src/config/redis.ts","webpack://auth/./src/server.ts","webpack://auth/external commonjs \"axios\"","webpack://auth/external commonjs \"chalk\"","webpack://auth/external commonjs \"connect-redis\"","webpack://auth/external commonjs \"cookie-parser\"","webpack://auth/external commonjs \"cors\"","webpack://auth/external commonjs \"csurf\"","webpack://auth/external commonjs \"express\"","webpack://auth/external commonjs \"express-openid-connect\"","webpack://auth/external commonjs \"express-rate-limit\"","webpack://auth/external commonjs \"helmet\"","webpack://auth/external commonjs \"http-errors\"","webpack://auth/external commonjs \"ioredis\"","webpack://auth/external commonjs \"morgan\"","webpack://auth/external node-commonjs \"path\"","webpack://auth/webpack/bootstrap","webpack://auth/webpack/startup"],"sourcesContent":["import { Request, Response, NextFunction } from 'express'\nimport createHttpError from 'http-errors'\n\nexport default {\n  login: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      const path = req.query.rm_path?.toString()\n      const host = req.query.rm_name?.toString()\n      const screen = req.query.screen?.toString() || ''\n      const redirectUrl =\n        host && path ? `/auth?rm_name=${host}&rm_path=${path}` : '/auth'\n\n      res.oidc.login({\n        returnTo: redirectUrl,\n        silent: true,\n        authorizationParams: {\n          screen,\n        },\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n  logout: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      if (!req.oidc.isAuthenticated())\n        throw new createHttpError.Unauthorized('Not logged in')\n      res.oidc.logout({ returnTo: process.env.BASE_HOST })\n      res.clearCookie('rm_ia', {\n        path: '/',\n        domain: process.env.COOKIE_DOMAIN,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n}\n","import { Request, Response, NextFunction } from 'express'\nimport createHttpError from 'http-errors'\nimport { IN_PROD } from '../../../config/app'\nimport { parseUser, syncToken, updateUserRef } from '../helpers/user'\n// import '../../../views/loader'\nexport default {\n  home: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      let url = process.env.BASE_HOST\n      let hostname\n      const path = req.query.rm_path?.toString()\n      const host = req.query.rm_name?.toString()\n\n      const token = req.oidc.accessToken?.access_token\n      const { SID } = req.cookies\n\n      SID && (await syncToken(token as string, SID))\n\n      if (path && host) {\n        if (IN_PROD) {\n          hostname =\n            host === 'app'\n              ? 'https://app.resumemango.com'\n              : host === 'manage'\n              ? 'https://manage.resumemango.com'\n              : 'https://www.resumemango.com'\n        } else {\n          hostname =\n            host === 'app'\n              ? 'http://localhost:3001'\n              : host === 'manage'\n              ? 'http://localhost:3002'\n              : 'http://localhost:3000'\n        }\n        url = hostname + path\n      }\n      res.redirect(url as string)\n      // res.setHeader('Content-Security-Policy', \"script-src 'unsafe-inline';\")\n      // res.render('loader', { url })\n    } catch (err) {\n      next(err)\n    }\n  },\n\n  initialData: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      const { SID } = req.cookies\n\n      const isAuth = req.oidc.isAuthenticated()\n      if (!isAuth) throw new createHttpError.Unauthorized()\n\n      const { token_type, isExpired, refresh } = req.oidc.accessToken as any\n\n      const user = req.oidc.user\n      if (!user) throw new createHttpError.Unauthorized('user not found!')\n\n      const userData = parseUser(user)\n\n      let token = req.oidc.accessToken?.access_token\n\n      if (isExpired()) {\n        const { access_token } = await refresh()\n\n        token = access_token\n      }\n\n      if (!token || !token_type) throw new createHttpError.Unauthorized()\n\n      if (!userData.ref) {\n        const res = await updateUserRef(token, refresh, SID)\n\n        if (res) {\n          token = res?.access_token\n          userData.ref = res.ref\n        }\n      }\n      res.status(200)\n      res.json({\n        user: userData,\n        token: `${token_type} ${token}`,\n      })\n    } catch (err) {\n      next(err)\n    }\n  },\n  refreshSession: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      if (!req.oidc.isAuthenticated()) throw new createHttpError.Unauthorized()\n\n      const { token_type, refresh } = req.oidc.accessToken as any\n\n      const { access_token } = await refresh()\n\n      if (!access_token)\n        throw createHttpError(400, 'failed to refresh session!')\n      console.log('refreshed')\n      res.status(200)\n      res.json(`${token_type} ${access_token}`)\n    } catch (err) {\n      next(err)\n    }\n  },\n}\n","import { Request, Response, NextFunction } from 'express'\nimport createHttpError from 'http-errors'\n\nexport default {\n  token: async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ): Promise<any> => {\n    try {\n      const isAuth = req.oidc.isAuthenticated()\n      if (!isAuth) throw new createHttpError.Unauthorized()\n      const { token_type, isExpired, refresh } = req.oidc.accessToken as any\n\n      let token = req.oidc.accessToken?.access_token\n\n      if (isExpired()) {\n        const { access_token } = await refresh()\n        token = access_token\n      }\n      if (!token || !token_type) throw new createHttpError.Unauthorized()\n      res.status(200)\n      res.json({ token_type, token })\n    } catch (err) {\n      next(err)\n    }\n  },\n}\n","import axios from 'axios'\n/**\n * Parse User object\n * @param user decoded user data\n * @returns { role, firstName, lastName, ref}\n */\nexport const parseUser = (user: Record<string, any>) => {\n  let firstName = ''\n  let lastName = ''\n  const namespace = process.env.AUTH0_RULES_NAMESPACE as string\n\n  const userMetadata = user && user[namespace].user_metadata\n  const appMetadata = user && user[namespace].app_metadata\n  const role = (user && user[namespace].role) || null\n\n  if (userMetadata && userMetadata.firstName) {\n    firstName = userMetadata.firstName\n    lastName = userMetadata.lastName\n  } else {\n    if (user.sub.split('|')[0] === 'auth0') {\n      firstName = user.nickname\n    } else {\n      firstName = user.given_name\n      lastName = user.family_name\n    }\n  }\n\n  const ref = appMetadata.ref || ''\n  return {\n    role,\n    firstName,\n    lastName,\n    ref,\n  }\n}\n/**\n * Saves sid token to databse\n * @param token authentication jwt access_token\n * @param SID session cookie\n * @returns boolean\n */\nexport const syncToken = async (token: string, SID: string) =>\n  await axios\n    .request({\n      method: 'PATCH',\n      url: `${process.env.API_HOST}/v1/m2m/user/sid`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n        Cookie: `SID=${SID};`,\n      },\n      withCredentials: true,\n    })\n    .then(async (_res) => {\n      console.log('synced')\n      return true\n    })\n    .catch((_err) => {\n      console.log('failed to sync session ID!')\n      return false\n    })\n\n/**\n * Updates user refrence in database\n * @param token authentication jwt access_token\n * @param refresh from oidc\n * @param SID session cookie\n * @returns (access_token, ref) or null\n */\nexport const updateUserRef = async (\n  token: string,\n  refresh: () => any,\n  SID: string\n) =>\n  await axios\n    .request({\n      method: 'POST',\n      url: `${process.env.API_HOST}/v1/m2m/user`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n        Cookie: `SID=${SID};`,\n      },\n      withCredentials: true,\n    })\n    .then(async (res) => {\n      const { access_token } = await refresh()\n\n      return { access_token, ref: res.data }\n    })\n    .catch((err) => {\n      console.log(\n        err.response && err.response.data && err.response.data.message\n          ? err.response.data.message\n          : err\n      )\n      return null\n    })\n","import { Request, Response, NextFunction } from 'express'\r\nimport { IN_PROD } from '../../../config/app'\r\n\r\nexport interface ResponseError extends Error {\r\n  status?: number\r\n}\r\n\r\nconst notFound = async (_req: Request, _res: Response, next: NextFunction) => {\r\n  const error: any = new Error('Not Found')\r\n  error.status = 404\r\n  next(error)\r\n}\r\n\r\nconst errorHandler = (\r\n  err: ResponseError,\r\n  req: Request,\r\n  res: Response,\r\n  _next: NextFunction\r\n) => {\r\n  console.log(err.stack)\r\n  const { retry } = req.query\r\n  if (\r\n    !retry &&\r\n    err.status === 400 &&\r\n    (err.message.includes('checks.state argument is missing') ||\r\n      err.message.includes('state mismatch'))\r\n  ) {\r\n    console.log('redirect for check state error')\r\n    return res.redirect('/auth?retry=1')\r\n  } else if (\r\n    err.status === 401 &&\r\n    err.message.includes('Not logged in') &&\r\n    process.env.BASE_HOST\r\n  ) {\r\n    return res.redirect(process.env.BASE_HOST as string)\r\n  } else {\r\n    res.status(err.status || 500)\r\n    return res.send({\r\n      error: {\r\n        status: err.status || 500,\r\n        message: err.message || 'Something went wrong',\r\n        stack: !IN_PROD ? err.stack : null,\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nexport { notFound, errorHandler }\r\n","import express from 'express'\nimport mainController from '../controllers/main'\nimport authController from '../controllers/auth'\n\nimport privateController from '../controllers/private'\n// import { requiresAuth } from 'express-openid-connect'\n\nconst router = express.Router()\nrouter.get('/', mainController.home)\nrouter.get('/data', mainController.initialData)\nrouter.get('/refresh', mainController.refreshSession)\nrouter.get('/private/token', privateController.token)\nrouter.get('/login', authController.login)\nrouter.get('/logout', authController.logout)\n\nexport default router\n","import express, { Application } from 'express'\nimport cors from 'cors'\nimport helmet from 'helmet'\nimport rateLimit from 'express-rate-limit'\nimport RoutesV1 from './api/v1/routes'\nimport cookieParser from 'cookie-parser'\nimport morgan from 'morgan'\nimport connectRedis from 'connect-redis'\nimport path from 'path'\nimport { redisClient } from './config/redis'\nimport { auth, ConfigParams } from 'express-openid-connect'\nimport { errorHandler, notFound } from './api/v1/middlewares/error_handler'\nimport { IN_STAGING, IN_PROD, PORT } from './config/app'\nimport csrf from 'csurf'\n\nconst app: Application = express()\n\nconst csrfProtection = csrf({\n  cookie: {\n    key: 'CSRF-TOKEN',\n    httpOnly: true,\n    secure: IN_PROD || false,\n    maxAge: 3600,\n    path: '/',\n    domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n    sameSite: 'lax',\n  },\n})\n\nconst RedisStore = connectRedis(auth) as any\n\napp.set('views', path.join(__dirname, '/views'))\napp.set('view engine', 'ejs')\n\napp.disable('x-powered-by')\n\nif (!IN_PROD) {\n  app.use(\n    cors({\n      origin: true,\n      credentials: true,\n    })\n  )\n}\n\napp.use(express.json())\napp.use(express.urlencoded({ extended: true }))\napp.use(cookieParser())\napp.use(morgan('dev'))\n\napp.use(\n  helmet({\n    crossOriginResourcePolicy: false,\n  })\n)\nif (!IN_STAGING) {\n  app.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'])\n\n  app.use(csrfProtection)\n  app.use((req, res, next) => {\n    const token = req.csrfToken()\n    res.cookie('XSRF-TOKEN', token, {\n      secure: IN_PROD || false,\n      maxAge: 3600,\n      path: '/',\n      domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n      sameSite: 'lax',\n    })\n    res.locals.csrfToken = token\n    next()\n  })\n}\n\nconst apiRequestLimiter = rateLimit({\n  windowMs: 1 * 60 * 1000, // 1 minute\n  max: 100, // limit each IP to 60 requests per windowMs\n})\n\napp.use(apiRequestLimiter)\n\nconst config: ConfigParams = {\n  clientSecret: process.env.AUTH0_CLIENT_SECRET,\n  clientID: process.env.AUTH0_CLIENT_ID,\n  secret: process.env.AUTH0_SECRET,\n  issuerBaseURL: process.env.AUTH0_ISSUER_BASE_URL,\n  baseURL:\n    !process.env.AUTH0_BASE_URL && !IN_PROD && !IN_STAGING\n      ? `http://localhost:${PORT}`\n      : process.env.AUTH0_BASE_URL,\n  authRequired: false,\n  auth0Logout: true,\n  idpLogout: true,\n\n  authorizationParams: {\n    response_type: 'code',\n    audience: process.env.AUTH0_AUDIENCE,\n    scope: 'openid profile email offline_access',\n  },\n  routes: {\n    login: false,\n    logout: false,\n    callback: '/auth/callback',\n    // postLogoutRedirect: process.env.BASE_HOST,\n  },\n  session: {\n    name: 'SID',\n    store: new RedisStore({ client: redisClient }),\n    cookie: {\n      domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n      path: '/',\n      transient: false,\n      httpOnly: true,\n      secure: IN_PROD,\n      sameSite: 'Lax',\n    },\n  },\n  afterCallback: async (_req, res, session) => {\n    res.cookie('rm_ia', true, {\n      expires: new Date(parseInt(session.expires_at) * 1000),\n      path: '/',\n      domain: IN_PROD ? process.env.COOKIE_DOMAIN : 'localhost',\n      sameSite: 'lax',\n      secure: IN_PROD,\n    })\n\n    return session\n  },\n}\n\napp.use(auth(config))\n\napp.use('/auth', RoutesV1)\n\napp.use(notFound, errorHandler)\n\nprocess.on('uncaughtException', function (err) {\n  console.error(err)\n  console.log('Node NOT Exiting...')\n})\n\nexport default app\n","const PORT = process.env.APP_PORT || 4000\n\nconst APP_ORIGIN = `http://localhost:${PORT}`\n\nconst IN_PROD = process.env.NODE_ENV === 'production'\nconst IN_STAGING = process.env.NODE_ENV === 'test'\n\nexport { PORT, APP_ORIGIN, IN_PROD, IN_STAGING }\n","import chalk from 'chalk'\nimport Redis, { RedisOptions } from 'ioredis'\nimport { IN_PROD } from './app'\n\nconst HOST = !IN_PROD ? 'localhost' : process.env.REDIS_HOST\n\nconst REDIS_OPTIONS: RedisOptions = {\n  port: Number(process.env.REDIS_PORT),\n  host: HOST,\n  // password: REDIS_PASSWORD\n}\n\nconst redisClient = new Redis(REDIS_OPTIONS)\n\nredisClient.on('connect', () =>\n  console.log(\n    chalk.yellow.bold(\n      `Redis connected on ${HOST}:${Number(process.env.REDIS_PORT)}`\n    )\n  )\n)\nredisClient.on('error', () =>\n  console.log(\n    chalk.red.bold(\n      `Redis failed to connect on ${HOST}:${Number(process.env.REDIS_PORT)}`\n    )\n  )\n)\n\nexport { redisClient }\n","import chalk from 'chalk'\nimport app from './app'\nimport { APP_ORIGIN, PORT } from './config/app'\n;(async () => {\n  try {\n    app.listen(PORT, () =>\n      // eslint-disable-next-line no-console\n      console.log(chalk.blue.bold(`Server running on ${APP_ORIGIN}`))\n    )\n  } catch (err) {\n    console.error(chalk.red.bold(err, 'trigger'))\n  }\n})()\n","module.exports = require(\"axios\");","module.exports = require(\"chalk\");","module.exports = require(\"connect-redis\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"csurf\");","module.exports = require(\"express\");","module.exports = require(\"express-openid-connect\");","module.exports = require(\"express-rate-limit\");","module.exports = require(\"helmet\");","module.exports = require(\"http-errors\");","module.exports = require(\"ioredis\");","module.exports = require(\"morgan\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(728);\n"],"names":["login","req","res","next","path","query","rm_path","toString","host","rm_name","screen","redirectUrl","oidc","returnTo","silent","authorizationParams","err","logout","isAuthenticated","Unauthorized","clearCookie","domain","home","hostname","url","token","accessToken","access_token","SID","cookies","syncToken","IN_PROD","redirect","initialData","token_type","isExpired","refresh","user","userData","parseUser","ref","updateUserRef","status","json","refreshSession","console","log","firstName","lastName","namespace","userMetadata","user_metadata","appMetadata","app_metadata","role","sub","split","nickname","given_name","family_name","request","method","headers","Authorization","Cookie","withCredentials","then","_res","catch","_err","data","response","message","notFound","_req","error","Error","errorHandler","_next","stack","retry","includes","send","router","Router","get","app","csrfProtection","cookie","key","httpOnly","secure","maxAge","sameSite","RedisStore","auth","set","join","__dirname","disable","use","origin","credentials","urlencoded","extended","crossOriginResourcePolicy","IN_STAGING","csrfToken","locals","apiRequestLimiter","windowMs","max","config","clientSecret","clientID","secret","issuerBaseURL","baseURL","authRequired","auth0Logout","idpLogout","response_type","audience","scope","routes","callback","session","name","store","client","redisClient","transient","afterCallback","expires","Date","parseInt","expires_at","process","on","PORT","APP_ORIGIN","HOST","REDIS_OPTIONS","port","Number","yellow","bold","red","listen","blue","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}