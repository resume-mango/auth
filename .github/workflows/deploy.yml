name: Deploy to production

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read # This is required for actions/checkout@v2

jobs:
  build:
    needs: testing
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::669525751309:role/github-actions-role
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: auth_service
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"

      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #       task-definition: ${{ env.ECS_TASK_DEFINITION }}
      #       container-name: ${{ env.CONTAINER_NAME }}
      #       image: ${{ steps.build-image.outputs.image }}

      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #       task-definition: ${{ steps.task-def.outputs.task-definition }}
      #       service: ${{ env.ECS_SERVICE }}
      #       cluster: ${{ env.ECS_CLUSTER }}
      #       wait-for-service-stability: true
